openapi: 3.0.3
info:
  title: ""
  version: 0.0.0
paths:
  /api/asistencias/:
    get:
      operationId: asistencias_list
      parameters:
        - in: query
          name: fecha
          schema:
            type: string
            format: date
        - in: query
          name: inscripcion_trimestre
          schema:
            type: integer
        - in: query
          name: observaciones
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: tipo
          schema:
            type: string
            enum:
              - F
              - L
              - P
          description: |-
            * `P` - Presente
            * `F` - Falta
            * `L` - Licencia
      tags:
        - asistencias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAsistenciaList"
          description: ""
    post:
      operationId: asistencias_create
      tags:
        - asistencias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Asistencia"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Asistencia"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Asistencia"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asistencia"
          description: ""
  /api/asistencias/{id}/:
    get:
      operationId: asistencias_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this asistencia.
          required: true
      tags:
        - asistencias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asistencia"
          description: ""
    put:
      operationId: asistencias_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this asistencia.
          required: true
      tags:
        - asistencias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Asistencia"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Asistencia"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Asistencia"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asistencia"
          description: ""
    patch:
      operationId: asistencias_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this asistencia.
          required: true
      tags:
        - asistencias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedAsistencia"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedAsistencia"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedAsistencia"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Asistencia"
          description: ""
    delete:
      operationId: asistencias_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this asistencia.
          required: true
      tags:
        - asistencias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/autos/:
    get:
      operationId: autos_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - autos
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedAutoList"
          description: ""
    post:
      operationId: autos_create
      tags:
        - autos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Auto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Auto"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Auto"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auto"
          description: ""
  /api/autos/{id}/:
    get:
      operationId: autos_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this auto.
          required: true
      tags:
        - autos
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auto"
          description: ""
    put:
      operationId: autos_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this auto.
          required: true
      tags:
        - autos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Auto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Auto"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Auto"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auto"
          description: ""
    patch:
      operationId: autos_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this auto.
          required: true
      tags:
        - autos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedAuto"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedAuto"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedAuto"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Auto"
          description: ""
    delete:
      operationId: autos_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this auto.
          required: true
      tags:
        - autos
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/curso_materia_profesor/:
    get:
      operationId: curso_materia_profesor_list
      parameters:
        - in: query
          name: bloque_1_fin
          schema:
            type: string
            format: time
        - in: query
          name: bloque_1_inicio
          schema:
            type: string
            format: time
        - in: query
          name: bloque_2_fin
          schema:
            type: string
            format: time
        - in: query
          name: bloque_2_inicio
          schema:
            type: string
            format: time
        - in: query
          name: curso
          schema:
            type: integer
        - in: query
          name: dia
          schema:
            type: string
        - in: query
          name: materia
          schema:
            type: integer
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: profesor
          schema:
            type: integer
      tags:
        - curso_materia_profesor
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCursoMateriaProfesorList"
          description: ""
    post:
      operationId: curso_materia_profesor_create
      tags:
        - curso_materia_profesor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CursoMateriaProfesor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CursoMateriaProfesor"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CursoMateriaProfesor"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursoMateriaProfesor"
          description: ""
  /api/curso_materia_profesor/{id}/:
    get:
      operationId: curso_materia_profesor_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso materia profesor.
          required: true
      tags:
        - curso_materia_profesor
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursoMateriaProfesor"
          description: ""
    put:
      operationId: curso_materia_profesor_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso materia profesor.
          required: true
      tags:
        - curso_materia_profesor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CursoMateriaProfesor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/CursoMateriaProfesor"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/CursoMateriaProfesor"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursoMateriaProfesor"
          description: ""
    patch:
      operationId: curso_materia_profesor_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso materia profesor.
          required: true
      tags:
        - curso_materia_profesor
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCursoMateriaProfesor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedCursoMateriaProfesor"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedCursoMateriaProfesor"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CursoMateriaProfesor"
          description: ""
    delete:
      operationId: curso_materia_profesor_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso materia profesor.
          required: true
      tags:
        - curso_materia_profesor
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/cursos/:
    get:
      operationId: cursos_list
      parameters:
        - in: query
          name: nombre
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: paralelo
          schema:
            type: string
      tags:
        - cursos
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedCursoList"
          description: ""
    post:
      operationId: cursos_create
      tags:
        - cursos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Curso"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Curso"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Curso"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Curso"
          description: ""
  /api/cursos-materias/:
    get:
      operationId: cursos_materias_retrieve
      tags:
        - cursos-materias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/cursos/{id}/:
    get:
      operationId: cursos_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso.
          required: true
      tags:
        - cursos
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Curso"
          description: ""
    put:
      operationId: cursos_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso.
          required: true
      tags:
        - cursos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Curso"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Curso"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Curso"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Curso"
          description: ""
    patch:
      operationId: cursos_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso.
          required: true
      tags:
        - cursos
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedCurso"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedCurso"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedCurso"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Curso"
          description: ""
    delete:
      operationId: cursos_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this curso.
          required: true
      tags:
        - cursos
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/estudiante/por-usuario/:
    get:
      operationId: estudiante_por_usuario_retrieve
      tags:
        - estudiante
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/estudiantes/:
    get:
      operationId: estudiantes_list
      parameters:
        - in: query
          name: ci_tutor
          schema:
            type: string
        - in: query
          name: curso
          schema:
            type: integer
        - in: query
          name: direccion
          schema:
            type: string
        - in: query
          name: fecha_nacimiento
          schema:
            type: string
            format: date
        - in: query
          name: genero
          schema:
            type: string
        - in: query
          name: nombre_madre
          schema:
            type: string
        - in: query
          name: nombre_padre
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: telefono
          schema:
            type: string
        - in: query
          name: usuario
          schema:
            type: integer
      tags:
        - estudiantes
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEstudianteList"
          description: ""
    post:
      operationId: estudiantes_create
      tags:
        - estudiantes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Estudiante"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Estudiante"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Estudiante"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudiante"
          description: ""
  /api/estudiantes-asistencias/:
    get:
      operationId: estudiantes_asistencias_retrieve
      tags:
        - estudiantes-asistencias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/estudiantes-clase/:
    get:
      operationId: estudiantes_clase_retrieve
      tags:
        - estudiantes-clase
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/estudiantes-evaluaciones-legales/:
    get:
      operationId: estudiantes_evaluaciones_legales_retrieve
      tags:
        - estudiantes-evaluaciones-legales
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/estudiantes-participaciones/:
    get:
      operationId: estudiantes_participaciones_retrieve
      tags:
        - estudiantes-participaciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/estudiantes/{id}/:
    get:
      operationId: estudiantes_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this estudiante.
          required: true
      tags:
        - estudiantes
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudiante"
          description: ""
    put:
      operationId: estudiantes_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this estudiante.
          required: true
      tags:
        - estudiantes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Estudiante"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Estudiante"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Estudiante"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudiante"
          description: ""
    patch:
      operationId: estudiantes_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this estudiante.
          required: true
      tags:
        - estudiantes
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEstudiante"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedEstudiante"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedEstudiante"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Estudiante"
          description: ""
    delete:
      operationId: estudiantes_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this estudiante.
          required: true
      tags:
        - estudiantes
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/evaluaciones_legales/:
    get:
      operationId: evaluaciones_legales_list
      parameters:
        - in: query
          name: inscripcion_trimestre
          schema:
            type: integer
        - in: query
          name: nota_decidir_evaluacion_estudiante
          schema:
            type: number
        - in: query
          name: nota_decidir_evaluacion_profesor
          schema:
            type: number
        - in: query
          name: nota_evaluacion_estudiante
          schema:
            type: number
        - in: query
          name: nota_evaluacion_legal
          schema:
            type: number
        - in: query
          name: nota_evaluacion_profesor
          schema:
            type: number
        - in: query
          name: nota_hacer_evaluacion_profesor
          schema:
            type: number
        - in: query
          name: nota_saber_evaluacion_profesor
          schema:
            type: number
        - in: query
          name: nota_ser_evaluacion_estudiante
          schema:
            type: number
        - in: query
          name: nota_ser_evaluacion_profesor
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - evaluaciones_legales
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedEvaluacionLegalList"
          description: ""
    post:
      operationId: evaluaciones_legales_create
      tags:
        - evaluaciones_legales
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluacionLegal"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/EvaluacionLegal"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/EvaluacionLegal"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluacionLegal"
          description: ""
  /api/evaluaciones_legales/{id}/:
    get:
      operationId: evaluaciones_legales_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this evaluacion legal.
          required: true
      tags:
        - evaluaciones_legales
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluacionLegal"
          description: ""
    put:
      operationId: evaluaciones_legales_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this evaluacion legal.
          required: true
      tags:
        - evaluaciones_legales
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EvaluacionLegal"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/EvaluacionLegal"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/EvaluacionLegal"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluacionLegal"
          description: ""
    patch:
      operationId: evaluaciones_legales_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this evaluacion legal.
          required: true
      tags:
        - evaluaciones_legales
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedEvaluacionLegal"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedEvaluacionLegal"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedEvaluacionLegal"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EvaluacionLegal"
          description: ""
    delete:
      operationId: evaluaciones_legales_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this evaluacion legal.
          required: true
      tags:
        - evaluaciones_legales
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/inscripcion-trimestral/id/:
    get:
      operationId: inscripcion_trimestral_id_retrieve
      tags:
        - inscripcion-trimestral
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/inscripciones/:
    get:
      operationId: inscripciones_list
      parameters:
        - in: query
          name: curso
          schema:
            type: integer
        - in: query
          name: estudiante
          schema:
            type: integer
        - in: query
          name: gestion_academica_anual
          schema:
            type: string
        - in: query
          name: materia
          schema:
            type: integer
        - in: query
          name: nota_asistencia
          schema:
            type: number
        - in: query
          name: nota_evaluacion_legal
          schema:
            type: number
        - in: query
          name: nota_participacion
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: profesor
          schema:
            type: integer
        - in: query
          name: rendimiento_academico_estimado
          schema:
            type: number
        - in: query
          name: rendimiento_academico_real
          schema:
            type: number
      tags:
        - inscripciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedInscripcionList"
          description: ""
    post:
      operationId: inscripciones_create
      tags:
        - inscripciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Inscripcion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Inscripcion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Inscripcion"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inscripcion"
          description: ""
  /api/inscripciones-trimestrales-estudiante/:
    get:
      operationId: inscripciones_trimestrales_estudiante_retrieve
      description: |-
        Recupera todas las InscripcionTrimestre de un estudiante en una gestión académica trimestral dada,
        incluyendo: nombre de materia, nombre de profesor, nombre de curso,
        rendimiento académico real y estimado, lista de asistencias, participaciones y evaluación legal.
      tags:
        - inscripciones-trimestrales-estudiante
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/inscripciones/{id}/:
    get:
      operationId: inscripciones_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion.
          required: true
      tags:
        - inscripciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inscripcion"
          description: ""
    put:
      operationId: inscripciones_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion.
          required: true
      tags:
        - inscripciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Inscripcion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Inscripcion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Inscripcion"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inscripcion"
          description: ""
    patch:
      operationId: inscripciones_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion.
          required: true
      tags:
        - inscripciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedInscripcion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedInscripcion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedInscripcion"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inscripcion"
          description: ""
    delete:
      operationId: inscripciones_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion.
          required: true
      tags:
        - inscripciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/inscripciones_trimestre/:
    get:
      operationId: inscripciones_trimestre_list
      parameters:
        - in: query
          name: gestion_academica_trimestral
          schema:
            type: string
        - in: query
          name: inscripcion
          schema:
            type: integer
        - in: query
          name: nota_asistencia
          schema:
            type: number
        - in: query
          name: nota_evaluacion_legal
          schema:
            type: number
        - in: query
          name: nota_participacion
          schema:
            type: number
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: rendimiento_academico_estimado
          schema:
            type: number
        - in: query
          name: rendimiento_academico_real
          schema:
            type: number
      tags:
        - inscripciones_trimestre
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedInscripcionTrimestreList"
          description: ""
    post:
      operationId: inscripciones_trimestre_create
      tags:
        - inscripciones_trimestre
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InscripcionTrimestre"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InscripcionTrimestre"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InscripcionTrimestre"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InscripcionTrimestre"
          description: ""
  /api/inscripciones_trimestre/{id}/:
    get:
      operationId: inscripciones_trimestre_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion trimestre.
          required: true
      tags:
        - inscripciones_trimestre
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InscripcionTrimestre"
          description: ""
    put:
      operationId: inscripciones_trimestre_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion trimestre.
          required: true
      tags:
        - inscripciones_trimestre
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/InscripcionTrimestre"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/InscripcionTrimestre"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/InscripcionTrimestre"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InscripcionTrimestre"
          description: ""
    patch:
      operationId: inscripciones_trimestre_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion trimestre.
          required: true
      tags:
        - inscripciones_trimestre
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedInscripcionTrimestre"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedInscripcionTrimestre"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedInscripcionTrimestre"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InscripcionTrimestre"
          description: ""
    delete:
      operationId: inscripciones_trimestre_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this inscripcion trimestre.
          required: true
      tags:
        - inscripciones_trimestre
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/materias/:
    get:
      operationId: materias_list
      parameters:
        - in: query
          name: descripcion
          schema:
            type: string
        - in: query
          name: nombre
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - materias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedMateriaList"
          description: ""
    post:
      operationId: materias_create
      tags:
        - materias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Materia"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Materia"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Materia"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Materia"
          description: ""
  /api/materias/{id}/:
    get:
      operationId: materias_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this materia.
          required: true
      tags:
        - materias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Materia"
          description: ""
    put:
      operationId: materias_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this materia.
          required: true
      tags:
        - materias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Materia"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Materia"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Materia"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Materia"
          description: ""
    patch:
      operationId: materias_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this materia.
          required: true
      tags:
        - materias
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedMateria"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedMateria"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedMateria"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Materia"
          description: ""
    delete:
      operationId: materias_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this materia.
          required: true
      tags:
        - materias
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/notificaciones/:
    get:
      operationId: notificaciones_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - notificaciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedNotificacionList"
          description: ""
    post:
      operationId: notificaciones_create
      tags:
        - notificaciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notificacion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Notificacion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Notificacion"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notificacion"
          description: ""
  /api/notificaciones/{id}/:
    get:
      operationId: notificaciones_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this notificacion.
          required: true
      tags:
        - notificaciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notificacion"
          description: ""
    put:
      operationId: notificaciones_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this notificacion.
          required: true
      tags:
        - notificaciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Notificacion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Notificacion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Notificacion"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notificacion"
          description: ""
    patch:
      operationId: notificaciones_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this notificacion.
          required: true
      tags:
        - notificaciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedNotificacion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedNotificacion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedNotificacion"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Notificacion"
          description: ""
    delete:
      operationId: notificaciones_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this notificacion.
          required: true
      tags:
        - notificaciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/participaciones/:
    get:
      operationId: participaciones_list
      parameters:
        - in: query
          name: fecha
          schema:
            type: string
            format: date
        - in: query
          name: inscripcion_trimestre
          schema:
            type: integer
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: participo
          schema:
            type: boolean
      tags:
        - participaciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedParticipacionList"
          description: ""
    post:
      operationId: participaciones_create
      tags:
        - participaciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Participacion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Participacion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Participacion"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Participacion"
          description: ""
  /api/participaciones/{id}/:
    get:
      operationId: participaciones_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this participacion.
          required: true
      tags:
        - participaciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Participacion"
          description: ""
    put:
      operationId: participaciones_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this participacion.
          required: true
      tags:
        - participaciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Participacion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Participacion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Participacion"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Participacion"
          description: ""
    patch:
      operationId: participaciones_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this participacion.
          required: true
      tags:
        - participaciones
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedParticipacion"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedParticipacion"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedParticipacion"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Participacion"
          description: ""
    delete:
      operationId: participaciones_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this participacion.
          required: true
      tags:
        - participaciones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/perros/:
    get:
      operationId: perros_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - perros
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedPerroList"
          description: ""
    post:
      operationId: perros_create
      tags:
        - perros
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Perro"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Perro"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Perro"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Perro"
          description: ""
  /api/perros/{id}/:
    get:
      operationId: perros_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this perro.
          required: true
      tags:
        - perros
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Perro"
          description: ""
    put:
      operationId: perros_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this perro.
          required: true
      tags:
        - perros
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Perro"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Perro"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Perro"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Perro"
          description: ""
    patch:
      operationId: perros_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this perro.
          required: true
      tags:
        - perros
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedPerro"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedPerro"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedPerro"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Perro"
          description: ""
    delete:
      operationId: perros_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this perro.
          required: true
      tags:
        - perros
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/personas/:
    get:
      operationId: personas_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - personas
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedPersonaList"
          description: ""
    post:
      operationId: personas_create
      tags:
        - personas
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Persona"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Persona"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Persona"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Persona"
          description: ""
  /api/personas/{id}/:
    get:
      operationId: personas_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona.
          required: true
      tags:
        - personas
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Persona"
          description: ""
    put:
      operationId: personas_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona.
          required: true
      tags:
        - personas
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Persona"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Persona"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Persona"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Persona"
          description: ""
    patch:
      operationId: personas_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona.
          required: true
      tags:
        - personas
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedPersona"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedPersona"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedPersona"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Persona"
          description: ""
    delete:
      operationId: personas_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona.
          required: true
      tags:
        - personas
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/personas_perros/:
    get:
      operationId: personas_perros_list
      parameters:
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
      tags:
        - personas_perros
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedPersonaPerroList"
          description: ""
    post:
      operationId: personas_perros_create
      tags:
        - personas_perros
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonaPerro"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PersonaPerro"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PersonaPerro"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonaPerro"
          description: ""
  /api/personas_perros/{id}/:
    get:
      operationId: personas_perros_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona perro.
          required: true
      tags:
        - personas_perros
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonaPerro"
          description: ""
    put:
      operationId: personas_perros_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona perro.
          required: true
      tags:
        - personas_perros
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PersonaPerro"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PersonaPerro"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PersonaPerro"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonaPerro"
          description: ""
    patch:
      operationId: personas_perros_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona perro.
          required: true
      tags:
        - personas_perros
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedPersonaPerro"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedPersonaPerro"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedPersonaPerro"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PersonaPerro"
          description: ""
    delete:
      operationId: personas_perros_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this persona perro.
          required: true
      tags:
        - personas_perros
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/profesor/por-usuario/:
    get:
      operationId: profesor_por_usuario_retrieve
      tags:
        - profesor
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/profesores/:
    get:
      operationId: profesores_list
      parameters:
        - in: query
          name: ci
          schema:
            type: string
        - in: query
          name: direccion
          schema:
            type: string
        - in: query
          name: especialidad
          schema:
            type: string
        - in: query
          name: fecha_ingreso
          schema:
            type: string
            format: date
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: profesion
          schema:
            type: string
        - in: query
          name: telefono
          schema:
            type: string
        - in: query
          name: tipo_contrato
          schema:
            type: string
        - in: query
          name: usuario
          schema:
            type: integer
      tags:
        - profesores
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedProfesorList"
          description: ""
    post:
      operationId: profesores_create
      tags:
        - profesores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profesor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Profesor"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Profesor"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profesor"
          description: ""
  /api/profesores/{id}/:
    get:
      operationId: profesores_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this profesor.
          required: true
      tags:
        - profesores
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profesor"
          description: ""
    put:
      operationId: profesores_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this profesor.
          required: true
      tags:
        - profesores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Profesor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Profesor"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Profesor"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profesor"
          description: ""
    patch:
      operationId: profesores_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this profesor.
          required: true
      tags:
        - profesores
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedProfesor"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedProfesor"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedProfesor"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Profesor"
          description: ""
    delete:
      operationId: profesores_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this profesor.
          required: true
      tags:
        - profesores
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
  /api/resumen-gestiones/estudiante/{estudiante_id}/:
    get:
      operationId: resumen_gestiones_estudiante_retrieve
      parameters:
        - in: path
          name: estudiante_id
          schema:
            type: integer
          required: true
      tags:
        - resumen-gestiones
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          description: No response body
  /api/schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
        - in: query
          name: format
          schema:
            type: string
            enum:
              - json
              - yaml
        - in: query
          name: lang
          schema:
            type: string
            enum:
              - af
              - ar
              - ar-dz
              - ast
              - az
              - be
              - bg
              - bn
              - br
              - bs
              - ca
              - ckb
              - cs
              - cy
              - da
              - de
              - dsb
              - el
              - en
              - en-au
              - en-gb
              - eo
              - es
              - es-ar
              - es-co
              - es-mx
              - es-ni
              - es-ve
              - et
              - eu
              - fa
              - fi
              - fr
              - fy
              - ga
              - gd
              - gl
              - he
              - hi
              - hr
              - hsb
              - hu
              - hy
              - ia
              - id
              - ig
              - io
              - is
              - it
              - ja
              - ka
              - kab
              - kk
              - km
              - kn
              - ko
              - ky
              - lb
              - lt
              - lv
              - mk
              - ml
              - mn
              - mr
              - ms
              - my
              - nb
              - ne
              - nl
              - nn
              - os
              - pa
              - pl
              - pt
              - pt-br
              - ro
              - ru
              - sk
              - sl
              - sq
              - sr
              - sr-latn
              - sv
              - sw
              - ta
              - te
              - tg
              - th
              - tk
              - tr
              - tt
              - udm
              - ug
              - uk
              - ur
              - uz
              - vi
              - zh-hans
              - zh-hant
      tags:
        - schema
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ""
  /api/token/:
    post:
      operationId: token_create
      description: |-
        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
        - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MyTokenObtainPair"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/MyTokenObtainPair"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/MyTokenObtainPair"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MyTokenObtainPair"
          description: ""
  /api/token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
        - token
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TokenRefresh"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/TokenRefresh"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/TokenRefresh"
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TokenRefresh"
          description: ""
  /api/usuarios/:
    get:
      operationId: usuarios_list
      parameters:
        - in: query
          name: correo
          schema:
            type: string
        - in: query
          name: groups
          schema:
            type: array
            items:
              type: integer
          explode: true
          style: form
        - in: query
          name: is_active
          schema:
            type: boolean
        - in: query
          name: is_staff
          schema:
            type: boolean
        - in: query
          name: is_superuser
          schema:
            type: boolean
        - in: query
          name: last_login
          schema:
            type: string
            format: date-time
        - in: query
          name: nombre
          schema:
            type: string
        - name: page
          required: false
          in: query
          description: A page number within the paginated result set.
          schema:
            type: integer
        - name: page_size
          required: false
          in: query
          description: Number of results to return per page.
          schema:
            type: integer
        - in: query
          name: password
          schema:
            type: string
        - in: query
          name: rol
          schema:
            type: string
            enum:
              - admin
              - estudiante
              - profesor
          description: |-
            * `admin` - Administrador
            * `estudiante` - Estudiante
            * `profesor` - Profesor
        - in: query
          name: user_permissions
          schema:
            type: array
            items:
              type: integer
          explode: true
          style: form
      tags:
        - usuarios
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaginatedUsuarioList"
          description: ""
    post:
      operationId: usuarios_create
      tags:
        - usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Usuario"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Usuario"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
          description: ""
  /api/usuarios/{id}/:
    get:
      operationId: usuarios_retrieve
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this usuario.
          required: true
      tags:
        - usuarios
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
          description: ""
    put:
      operationId: usuarios_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this usuario.
          required: true
      tags:
        - usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Usuario"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Usuario"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Usuario"
        required: true
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
          description: ""
    patch:
      operationId: usuarios_partial_update
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this usuario.
          required: true
      tags:
        - usuarios
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PatchedUsuario"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/PatchedUsuario"
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/PatchedUsuario"
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Usuario"
          description: ""
    delete:
      operationId: usuarios_destroy
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this usuario.
          required: true
      tags:
        - usuarios
      security:
        - tokenAuth: []
        - cookieAuth: []
        - jwtAuth: []
        - {}
      responses:
        "204":
          description: No response body
components:
  schemas:
    Asistencia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        fecha:
          type: string
          format: date
        tipo:
          $ref: "#/components/schemas/TipoEnum"
        observaciones:
          type: string
        inscripcion_trimestre:
          type: integer
      required:
        - fecha
        - id
        - inscripcion_trimestre
    Auto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        marca:
          type: string
          maxLength: 100
        modelo:
          type: string
          maxLength: 100
        persona:
          type: integer
      required:
        - id
        - marca
        - modelo
        - persona
    Curso:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        paralelo:
          type: string
          maxLength: 10
      required:
        - id
        - nombre
        - paralelo
    CursoMateriaProfesor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dia:
          type: string
          maxLength: 10
        bloque_1_inicio:
          type: string
          format: time
        bloque_1_fin:
          type: string
          format: time
        bloque_2_inicio:
          type: string
          format: time
        bloque_2_fin:
          type: string
          format: time
        curso:
          type: integer
        materia:
          type: integer
        profesor:
          type: integer
      required:
        - bloque_1_fin
        - bloque_1_inicio
        - bloque_2_fin
        - bloque_2_inicio
        - curso
        - dia
        - id
        - materia
        - profesor
    Estudiante:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        fecha_nacimiento:
          type: string
          format: date
        genero:
          type: string
          maxLength: 20
        nombre_padre:
          type: string
          maxLength: 100
        nombre_madre:
          type: string
          maxLength: 100
        ci_tutor:
          type: string
          maxLength: 20
        direccion:
          type: string
          maxLength: 200
        telefono:
          type: string
          maxLength: 20
        usuario:
          type: integer
        curso:
          type: integer
          nullable: true
      required:
        - ci_tutor
        - direccion
        - fecha_nacimiento
        - genero
        - id
        - nombre_madre
        - nombre_padre
        - telefono
        - usuario
    EvaluacionLegal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nota_saber_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_hacer_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_ser_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_decidir_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_ser_evaluacion_estudiante:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_decidir_evaluacion_estudiante:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_evaluacion_estudiante:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_evaluacion_legal:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        inscripcion_trimestre:
          type: integer
      required:
        - id
        - inscripcion_trimestre
        - nota_decidir_evaluacion_estudiante
        - nota_decidir_evaluacion_profesor
        - nota_evaluacion_estudiante
        - nota_evaluacion_legal
        - nota_evaluacion_profesor
        - nota_hacer_evaluacion_profesor
        - nota_saber_evaluacion_profesor
        - nota_ser_evaluacion_estudiante
        - nota_ser_evaluacion_profesor
    Inscripcion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        gestion_academica_anual:
          type: string
          maxLength: 20
        nota_evaluacion_legal:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_asistencia:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_participacion:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_real:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_estimado:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        curso:
          type: integer
        estudiante:
          type: integer
        profesor:
          type: integer
          nullable: true
        materia:
          type: integer
      required:
        - curso
        - estudiante
        - gestion_academica_anual
        - id
        - materia
        - nota_asistencia
        - nota_evaluacion_legal
        - nota_participacion
        - rendimiento_academico_estimado
        - rendimiento_academico_real
    InscripcionTrimestre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        gestion_academica_trimestral:
          type: string
          maxLength: 20
        nota_evaluacion_legal:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_asistencia:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_participacion:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_real:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_estimado:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        inscripcion:
          type: integer
      required:
        - gestion_academica_trimestral
        - id
        - inscripcion
        - nota_asistencia
        - nota_evaluacion_legal
        - nota_participacion
        - rendimiento_academico_estimado
        - rendimiento_academico_real
    Materia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        descripcion:
          type: string
      required:
        - id
        - nombre
    MyTokenObtainPair:
      type: object
      properties:
        correo:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
        - correo
        - password
    Notificacion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        descripcion:
          type: string
      required:
        - descripcion
        - id
    PaginatedAsistenciaList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Asistencia"
    PaginatedAutoList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Auto"
    PaginatedCursoList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Curso"
    PaginatedCursoMateriaProfesorList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/CursoMateriaProfesor"
    PaginatedEstudianteList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Estudiante"
    PaginatedEvaluacionLegalList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/EvaluacionLegal"
    PaginatedInscripcionList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Inscripcion"
    PaginatedInscripcionTrimestreList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/InscripcionTrimestre"
    PaginatedMateriaList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Materia"
    PaginatedNotificacionList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Notificacion"
    PaginatedParticipacionList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Participacion"
    PaginatedPerroList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Perro"
    PaginatedPersonaList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Persona"
    PaginatedPersonaPerroList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/PersonaPerro"
    PaginatedProfesorList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Profesor"
    PaginatedUsuarioList:
      type: object
      required:
        - count
        - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: "#/components/schemas/Usuario"
    Participacion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        participo:
          type: boolean
        fecha:
          type: string
          format: date
        inscripcion_trimestre:
          type: integer
      required:
        - fecha
        - id
        - inscripcion_trimestre
        - participo
    PatchedAsistencia:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        fecha:
          type: string
          format: date
        tipo:
          $ref: "#/components/schemas/TipoEnum"
        observaciones:
          type: string
        inscripcion_trimestre:
          type: integer
    PatchedAuto:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        marca:
          type: string
          maxLength: 100
        modelo:
          type: string
          maxLength: 100
        persona:
          type: integer
    PatchedCurso:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        paralelo:
          type: string
          maxLength: 10
    PatchedCursoMateriaProfesor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        dia:
          type: string
          maxLength: 10
        bloque_1_inicio:
          type: string
          format: time
        bloque_1_fin:
          type: string
          format: time
        bloque_2_inicio:
          type: string
          format: time
        bloque_2_fin:
          type: string
          format: time
        curso:
          type: integer
        materia:
          type: integer
        profesor:
          type: integer
    PatchedEstudiante:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        fecha_nacimiento:
          type: string
          format: date
        genero:
          type: string
          maxLength: 20
        nombre_padre:
          type: string
          maxLength: 100
        nombre_madre:
          type: string
          maxLength: 100
        ci_tutor:
          type: string
          maxLength: 20
        direccion:
          type: string
          maxLength: 200
        telefono:
          type: string
          maxLength: 20
        usuario:
          type: integer
        curso:
          type: integer
          nullable: true
    PatchedEvaluacionLegal:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nota_saber_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_hacer_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_ser_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_decidir_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_evaluacion_profesor:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_ser_evaluacion_estudiante:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_decidir_evaluacion_estudiante:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_evaluacion_estudiante:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_evaluacion_legal:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        inscripcion_trimestre:
          type: integer
    PatchedInscripcion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        gestion_academica_anual:
          type: string
          maxLength: 20
        nota_evaluacion_legal:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_asistencia:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_participacion:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_real:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_estimado:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        curso:
          type: integer
        estudiante:
          type: integer
        profesor:
          type: integer
          nullable: true
        materia:
          type: integer
    PatchedInscripcionTrimestre:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        gestion_academica_trimestral:
          type: string
          maxLength: 20
        nota_evaluacion_legal:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_asistencia:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        nota_participacion:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_real:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        rendimiento_academico_estimado:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
        inscripcion:
          type: integer
    PatchedMateria:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        descripcion:
          type: string
    PatchedNotificacion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        descripcion:
          type: string
    PatchedParticipacion:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        participo:
          type: boolean
        fecha:
          type: string
          format: date
        inscripcion_trimestre:
          type: integer
    PatchedPerro:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        raza:
          type: string
          maxLength: 100
    PatchedPersona:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        edad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
    PatchedPersonaPerro:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        persona:
          type: integer
        perro:
          type: integer
    PatchedProfesor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        especialidad:
          type: string
          maxLength: 100
        profesion:
          type: string
          maxLength: 100
        fecha_ingreso:
          type: string
          format: date
        tipo_contrato:
          type: string
          maxLength: 50
        ci:
          type: string
          maxLength: 20
        direccion:
          type: string
          maxLength: 200
        telefono:
          type: string
          maxLength: 20
        usuario:
          type: integer
    PatchedUsuario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        nombre:
          type: string
          maxLength: 100
        correo:
          type: string
          format: email
          maxLength: 100
        rol:
          $ref: "#/components/schemas/RolEnum"
    Perro:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        raza:
          type: string
          maxLength: 100
      required:
        - id
        - nombre
        - raza
    Persona:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        nombre:
          type: string
          maxLength: 100
        edad:
          type: integer
          maximum: 2147483647
          minimum: -2147483648
      required:
        - edad
        - id
        - nombre
    PersonaPerro:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        persona:
          type: integer
        perro:
          type: integer
      required:
        - id
        - perro
        - persona
    Profesor:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        especialidad:
          type: string
          maxLength: 100
        profesion:
          type: string
          maxLength: 100
        fecha_ingreso:
          type: string
          format: date
        tipo_contrato:
          type: string
          maxLength: 50
        ci:
          type: string
          maxLength: 20
        direccion:
          type: string
          maxLength: 200
        telefono:
          type: string
          maxLength: 20
        usuario:
          type: integer
      required:
        - ci
        - direccion
        - especialidad
        - fecha_ingreso
        - id
        - profesion
        - telefono
        - tipo_contrato
        - usuario
    RolEnum:
      enum:
        - admin
        - estudiante
        - profesor
      type: string
      description: |-
        * `admin` - Administrador
        * `estudiante` - Estudiante
        * `profesor` - Profesor
    TipoEnum:
      enum:
        - P
        - F
        - L
      type: string
      description: |-
        * `P` - Presente
        * `F` - Falta
        * `L` - Licencia
    TokenRefresh:
      type: object
      properties:
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          writeOnly: true
      required:
        - access
        - refresh
    Usuario:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          writeOnly: true
        nombre:
          type: string
          maxLength: 100
        correo:
          type: string
          format: email
          maxLength: 100
        rol:
          $ref: "#/components/schemas/RolEnum"
      required:
        - correo
        - id
        - nombre
        - password
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
